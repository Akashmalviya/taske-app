swagger: "2.0"
info:
  description: "This is a Node Mongo Express server presenting API Doc using Swagger. You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). To use those APIs require authentication, Please pass api key as 'access_token' from authorization, Then you can test the authorized APIs"
  version: "1.0.0"
  title: "Swagger Mean API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
basePath: "/"
tags:
- name: "Auth"
  description: "Authentication related operations."
# - name: "User"
#   description: "Operations about user"
schemes:
# - "https"
- "http"

securityDefinitions:
  api_key:
    type: "apiKey"
    name: "access_token"
    in: "header"
paths:
  /api/auth/get-subscription-packages:
    get:
      tags:
      - "Auth"
      summary: "Get subscription packages details."
      description: "Its an open API."
      operationId: "getSubscriptionPackagesDetails"
      produces:
      - "application/json"
      # parameters:
      # - in: "header"
      #   name: "access_token"
      #   description: "Access Token"
      #   required: true
      responses:
        default:
          description: "successful operation"
  /api/auth/signup:
    post:
      tags:
      - "Auth"
      summary: "Sign Up"
      description: "Signup up process for customer/business Profile."
      operationId: "UserSignup"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Signup object"
        required: true
        schema:
            $ref: "#/definitions/Signup"
      responses:
        "200":
          description: "successful operation"
          # schema:
          #   $ref: "#/definitions/User"
        "400":
          description: "Invalid username supplied"
        "422":
          description: "Validation failed"
        "404":
          description: "User not found"
  /api/auth/login:
    post:
      tags:
      - "Auth"
      summary: "Logs user into the system with valid credentials"
      description: ""
      operationId: "loginUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Login Model"
        required: true
        schema:
          $ref: "#/definitions/Login"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "400":
          description: "Invalid username/password supplied"
  /api/auth/verify-email/{email_code}:
    get:
      tags:
      - "Auth"
      summary: "Email verification via code grant from activation link from welcome email."
      description: ""
      operationId: "emailActivation"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "email_code"
        description: "Email activation code of 5 chars."
        required: true
        type: string
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "400":
          description: "Invalid code supplied"

    xml:
      name: "User"
  
  ApiResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
      data:
        type: "object"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"